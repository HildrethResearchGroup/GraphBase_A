{\rtf1\ansi\ansicpg1252\cocoartf1187
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red170\green13\blue145;\red63\green110\blue116;\red100\green56\blue32;
\red196\green26\blue22;\red46\green13\blue110;\red0\green116\blue0;\red38\green71\blue75;\red28\green0\blue207;
\red92\green38\blue153;}
\margl1440\margr1440\vieww12600\viewh7800\viewkind0
\deftab529
\pard\tx529\pardeftab529\pardirnatural

\f0\fs22 \cf0 \CocoaLigature0 -(\cf2 void\cf0 ) updateGraphWithParsedDataCollector:(\cf3 ParsedDataCollector\cf0  *)parsedDataIn\{\
    \cf4 DLog\cf0 (\cf5 @"CALLED - AppDelegate: updateGraphWithParsedDataCollector"\cf0 );\
	\cf6 NSBeep\cf0 ();\
	\
	\
    \cf7 //if (([[parsedDataIn dataArrays] count] <= 0) || ([[parsedDataIn fieldNames] count] <= 0)) \{\cf0 \
    \cf2 if\cf0  ( [[parsedDataIn \cf8 dataArrays\cf0 ] \cf6 count\cf0 ] <= \cf9 0\cf0  ) \{\
        \cf4 DLog\cf0 (\cf5 @"parsedDataIn is empty"\cf0 );\
		\cf4 DLog\cf0 (\cf5 @"[[parsedDataIn dataArrays] count	= %lu"\cf0 , [[parsedDataIn \cf8 dataArrays\cf0 ] \cf6 count\cf0 ]);\
		\cf4 DLog\cf0 (\cf5 @"[[parsedDataIn fieldNames] count]	= %lu"\cf0 , [[parsedDataIn \cf8 fieldNames\cf0 ] \cf6 count\cf0 ]);\
		\
        \cf2 return\cf0 ;\
    \}\
	\
	\cf7 // Get the correct DataGraph Template\cf0 \
	\cf3 HNDataItem\cf0  *currentData = [[[\cf2 self\cf0 .\cf3 datasource\cf0  \cf8 dataItemsArrayControllerFromSource\cf0 ] \cf6 selectedObjects\cf0 ] \cf8 firstObject\cf0 ];\
	\
	\
    \cf7 //id currentData = [[controller_Data selectedObjects] lastObject];\cf0 \
    \cf10 NSString\cf0  *graphPath = [[currentData \cf6 valueForKey\cf0 :\cf5 @"graphTemplate"\cf0 ] \cf6 valueForKey\cf0 :\cf5 @"filePath"\cf0 ];\
	\
	\cf10 NSFileManager\cf0  *fm = [\cf10 NSFileManager\cf0  \cf6 defaultManager\cf0 ];\
	\cf2 if\cf0  ([fm \cf6 fileExistsAtPath\cf0 : graphPath]) \{\
        \
        \cf2 if\cf0  ([\cf2 self\cf0 .\cf3 currentGraphTemplateFilePath\cf0  \cf6 isEqualToString\cf0 : graphPath] == \cf2 NO\cf0 ) \{\
			\
			\cf2 BOOL\cf0  graphTemplateUpdateSucessfull;\
			graphTemplateUpdateSucessfull = [\cf2 self\cf0  \cf8 updateGraphTemplateWithPath\cf0 : graphPath];\
            \
            \cf2 if\cf0  (graphTemplateUpdateSucessfull) \{\
                \cf2 self\cf0 .\cf3 currentGraphTemplateFilePath\cf0  = graphPath;\
            \}\
			\cf4 DLog\cf0 (\cf5 @"graphPath exists at path %@ and graphTemplateUpdateSucessfull = %i"\cf0 , graphPath, graphTemplateUpdateSucessfull);\
        \}\
	\}\
    \
    \cf10 NSArray\cf0  *fieldNames    = [parsedDataIn \cf8 fieldNames\cf0 ];\
    \cf10 NSArray\cf0  *dataArrays    = [parsedDataIn \cf8 dataArrays\cf0 ];\
    \
	\
	\cf7 //Clear the columns of the dataGraphController\cf0 \
    \cf2 int\cf0  i = \cf9 0\cf0 ;\
    \cf7 //DLog(@"count of fieldNames = %lu", [fieldNames count]);\cf0 \
    \cf7 //DLog(@"fieldNames = %@", fieldNames);\cf0 \
	\
	\
    \cf2 int\cf0  numberOfColumns = [\cf2 self\cf0 .\cf3 dataGraphController\cf0  \cf6 numberOfDataColumns\cf0 ] - \cf9 1\cf0 ;\
    \cf2 int\cf0  numberOfDataColumns = (\cf2 int\cf0 ) [dataArrays \cf6 count\cf0 ];\
    \cf2 int\cf0  numberToIterateOver = numberOfColumns;\
    \
    \cf2 if\cf0  (numberOfDataColumns < numberOfColumns) \{\
        numberToIterateOver = numberOfDataColumns;\
    \}\
    \
	\
    \cf7 //DLog(@"\\nnumberToIterateOver = %i\\n numberOfColumns = %i\\nnumberOfDataColumns = %i", numberToIterateOver, numberOfColumns, numberOfDataColumns);\cf0 \
	\
    \cf2 for\cf0  (i = \cf9 0\cf0 ; i <= numberToIterateOver - \cf9 1\cf0 ; i++ ) \{\
        \cf7 //NSString *nextKey = [fieldNames objectAtIndex: i];\cf0 \
        \cf10 NSArray\cf0  *nextArray = [dataArrays \cf6 objectAtIndex\cf0 : i];\
		\
		\cf7 // CHANGED\cf0 \
		\cf10 DGDataColumn\cf0  *nextDataCollumn = [\cf2 self\cf0 .\cf3 dataGraphController\cf0  \cf6 dataColumnAtIndex\cf0 : i+\cf9 1\cf0 ];\
        [nextDataCollumn \cf6 emptyTheColumn\cf0 ];\
        [nextDataCollumn \cf6 setDataFromArray\cf0 : nextArray];\
        \cf7 //DLog(@"dataColumn at index %i = %@", i, [dataGraphController dataColumnAtIndex: i+1]);\cf0 \
		\
    \}\
	\
	\cf7 // Set the axis titles to the fieldNames\cf0 \
    \cf7 // Check to see if there are axis to name and how many\cf0 \
	\cf2 int\cf0  x = \cf9 0\cf0 ;\
	\cf2 int\cf0  y = \cf9 0\cf0 ;\
	\
	x = [\cf2 self\cf0 .\cf3 dataGraphController\cf0  \cf6 howManyXAxes\cf0 ];\
	y = [\cf2 self\cf0 .\cf3 dataGraphController\cf0  \cf6 howManyYAxes\cf0 ];\
	\
	\
	\cf4 DLog\cf0 (\cf5 @"#x axis = %i, #y axis = %i"\cf0 , x, y);\
	\
	\
    \cf7 // Get the names of the axis\cf0 \
	\cf2 if\cf0  ([fieldNames \cf6 count\cf0 ] >= \cf9 2\cf0 ) \{\
        \
        \cf10 NSString\cf0  *xAxis = [fieldNames \cf6 objectAtIndex\cf0 : \cf9 0\cf0 ];\
        \cf10 NSString\cf0  *yAxis = [fieldNames \cf6 objectAtIndex\cf0 : \cf9 1\cf0 ];\
        \
        \cf7 // Write current state to tempScript\cf0 \
        \
		\cf7 // CHANGED\cf0 \
		\cf7 //NSString *tempScriptPath = [[self.datasource applicationFilesDirectoryFromSource] relativePath];\cf0 \
		\cf3 HNDataItem\cf0  *dataItemIn = parsedDataIn.\cf3 dataObject\cf0 ;\
		NSString *tempScriptPath;\
		\cf2 if\cf0  (dataItemIn) \{\
			tempScriptPath = [dataItemIn \cf8 localizedResourcePath\cf0 ];\
			tempScriptPath = [tempScriptPath \cf6 stringByAppendingPathComponent\cf0 : [dataItemIn \cf8 applicationSupportLocalDataFileName\cf0 ]];\
		\}\
		\cf2 else\cf0  \{\
			tempScriptPath = [[[\cf10 NSApplication\cf0  \cf6 sharedApplication\cf0 ] \cf8 applicationFilesDirectory\cf0 ] \cf6 relativePath\cf0 ];\
			tempScriptPath = [tempScriptPath \cf6 stringByAppendingPathComponent\cf0 : \cf5 @"tempScript.dgraph"\cf0 ];\
		\}\
		\
		\
        \cf2 if\cf0  ([\cf2 self\cf0 .\cf3 dataGraphController\cf0  \cf6 writeToPath\cf0 : tempScriptPath]) \{\
            \cf7 //DLog(@"wrote to: %@", tempScriptPath);\cf0 \
        \}\
		 \
        \
        \
        \cf7 // Create empty DataGraphController to hold old script, overwrite the axis titles\cf0 \
        \cf10 DGController\cf0  *newDataGraphController = [\cf10 DGController\cf0  \cf6 createEmpty\cf0 ];\
        \
        \
        \cf7 // set newDataGraphController to tempScript.dgraph\cf0 \
        [newDataGraphController \cf6 overwriteWithScriptFile\cf0 : tempScriptPath];\
        \
        \
        \cf7 //Update the axis of the newDataGraphController\cf0 \
        [[newDataGraphController \cf6 xAxisNumber\cf0 : \cf9 0\cf0 ] \cf6 setAxisTitle\cf0 : xAxis];\
        [[newDataGraphController \cf6 yAxisNumber\cf0 : \cf9 0\cf0 ] \cf6 setAxisTitle\cf0 : yAxis];\
		\
		\cf4 DLog\cf0 (\cf5 @"Range on x axis = %f, %f"\cf0 , [[newDataGraphController \cf6 xAxisNumber\cf0 : \cf9 0\cf0 ] \cf6 cropRange\cf0 ].\cf10 minV\cf0 , [[newDataGraphController \cf6 xAxisNumber\cf0 : \cf9 0\cf0 ] \cf6 cropRange\cf0 ].\cf10 maxV\cf0 );\
		\cf7 // Reset range\cf0 \
		\
		\
		\cf7 // Determine from UserDefaults if need to reset Crop range\cf0 \
		\cf10 NSUserDefaults\cf0  *userDefaults = [\cf10 NSUserDefaults\cf0  \cf6 standardUserDefaults\cf0 ];\
		\cf10 NSNumber\cf0  *resetCrop = [userDefaults \cf6 valueForKey\cf0 : \cf3 HNResetCropOnNewSelectionKey\cf0 ];\
		\cf2 if\cf0  ( [resetCrop \cf6 boolValue\cf0 ] ) \{\
			\cf4 DLog\cf0 (\cf5 @"HNResetCropOnNewSelectionKey = %i"\cf0 , [resetCrop \cf6 boolValue\cf0 ]);\
			\cf10 DGRange\cf0  fullRange = \cf6 DGMakeRange\cf0 (-\cf4 INFINITY\cf0 , \cf4 INFINITY\cf0 );\
			[currentData \cf8 quickCropRangeToPropertyList\cf0 : fullRange];\
			[[newDataGraphController \cf6 xAxisNumber\cf0 : \cf9 0\cf0 ] \cf6 setCropRange\cf0 : fullRange];\
			[[newDataGraphController \cf6 yAxisNumber\cf0 : \cf9 0\cf0 ] \cf6 setCropRange\cf0 : fullRange];\
		\}\
		\cf2 else\cf0  \{\
			\cf7 // Get stored crop range\cf0 \
			\cf10 DGRange\cf0  setCropRange = [currentData \cf8 quickCropRangeFromPropertyList\cf0 ];\
			[[newDataGraphController \cf6 xAxisNumber\cf0 : \cf9 0\cf0 ] \cf6 setCropRange\cf0 : setCropRange];\
			[[newDataGraphController \cf6 yAxisNumber\cf0 : \cf9 0\cf0 ] \cf6 setCropRange\cf0 : setCropRange];\
		\}\
		\
		\
		\
		\cf7 //DLog(@"New Range on x axis = %f, %f", [[newDataGraphController xAxisNumber: 0] cropRange].minV, [[newDataGraphController xAxisNumber: 0] cropRange].maxV);\cf0 \
		\
		\
		\
        \cf7 // Update the Title of the newDataGraphController\cf0 \
        \cf10 NSString\cf0  *newTitle = [\cf10 NSString\cf0  \cf6 string\cf0 ];\
        \cf3 HNTreeNode\cf0  *currentNode = [currentData  \cf6 valueForKey\cf0 : \cf5 @"treeNode"\cf0 ];\
        \cf10 NSString\cf0  *groupName     = [currentNode  \cf6 valueForKey\cf0 : \cf5 @"displayName"\cf0 ];\
        \cf10 NSString\cf0  *dataName      = [currentData  \cf6 valueForKey\cf0 : \cf5 @"displayName"\cf0 ];\
        \
        newTitle = [newTitle \cf6 stringByAppendingFormat\cf0 :\cf5 @"%@:   %@"\cf0 , groupName, dataName];\
        [[newDataGraphController \cf6 canvasSettings\cf0 ] \cf6 setTitle\cf0 :newTitle];\
        \
        \cf7 // Write the contents of newDataGraphController to tempScriptPath\cf0 \
        [newDataGraphController \cf6 writeToPath\cf0 : tempScriptPath];\
        \
        \cf2 if\cf0  ([\cf2 self\cf0 .\cf3 dataGraphController\cf0  \cf6 overwriteWithScriptFile\cf0 :tempScriptPath ]) \{\
            \cf4 DLog\cf0 (\cf5 @"dataGraphController overwritten with: %@"\cf0 , tempScriptPath);\
        \}\
		\
        \
	\}\
	\
    \
    [\cf2 self\cf0 .\cf3 dataGraphController\cf0  \cf6 redrawNow\cf0 ];\
\}}